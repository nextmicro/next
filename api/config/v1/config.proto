syntax = "proto3";

package next.config.v1;

option go_package = "github.com/nextmicro/next/api/config/v1";

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

// next micro global config
message Next {
  // service id
  string id = 1;
  // service name
  string name = 2;
  // service version
  string version = 3;
  // service metadata
  map<string, string> metadata = 4;
  // registry config
  Registry            registry = 5;
  // server config
  Server  server = 6;
  // logger config
  Logger  logger = 10;
  // telemetry config
  Telemetry telemetry = 11;
  // nacos config
  Nacos   nacos = 12;
  // broker config
  Broker  broker = 13;
}

// server config
message Server {
  HTTPServer http = 1;
  GRPCServer grpc = 2;
}

// grpc server config
message GRPCServer {
  string network = 1;
  string addr = 2;
  google.protobuf.Duration timeout = 3;
  repeated Middleware middlewares = 4;
}

// http server config
message HTTPServer {
  string network = 1;
  string addr = 2;
  google.protobuf.Duration timeout = 3;
  repeated Middleware middlewares = 4;
}

// http client config
message HTTPClient {
  string endpoint = 1; // http client endpoint
  google.protobuf.Duration timeout = 3;
  repeated Middleware middlewares = 4;
}

// grpc client config
message GRPCClient {
  string endpoint = 1; // http client endpoint
  google.protobuf.Duration timeout = 3;
  repeated Middleware middlewares = 4;
}

// logger config
message Logger {
  string file_name = 1; // 日志文件名，默认按照日志级别命名
  string  path = 2; // 设置日志路径，默认为 /data/logs/${项目名}/projlogs
  string  level = 3; // 用于过滤日志的日志级别。默认为 info
  bool    console = 4; // 是否输出到控制台，默认为 true
  bool    file = 5; // 模式将日志写到 Path 指定目录的文件中
  bool compress = 6; // 是否压缩日志文件，只在 file 模式下工作
  int32 keep_days = 7; // 日志文件被保留多少天，在给定的天数之后，过期的文件将被自动删除。对 console 模式没有影响
  int32 keep_hours = 8; // 日志文件被保留多少小时，在给定的小时数之后，过期的文件将被自动删除。对 console 模式没有影响
  int32 max_backups = 9; // 多少个日志文件备份将被保存。0代表所有备份都被保存。当Rotation被设置为size时才会起作用。注意：KeepDays选项的优先级会比MaxBackups高，即使MaxBackups被设置为0，当达到KeepDays上限时备份文件同样会被删除。
  int32 max_size = 10; // 当前被写入的日志文件最大可占用多少空间。0代表没有上限。单位为MB。当Rotation被设置为size时才会起作用
  string rotation = 11; // 日志轮转策略类型。默认为daily（按天轮转），可选值为: daily 按天轮转、size 按日志大小轮转、hour 按小时轮转
  map<string, string> metadata = 20; // 日志元数据
}

// Broker config
message Broker {
  bool    disable = 1;   // disable tracing
  string         name = 2;  // broker name, eg: kafka, nsq
  repeated string addrs = 3;  // broker address
  Publish       publish = 4; // broker publish config
  Subscribe     subscribe = 5; // broker subscribe config
}

// broker publish config
message Publish {}

// broker subscribe config
message Subscribe {
  string queue = 1; // queue name
  bool auto_ack = 2; // auto ack
}

// Registry config
message Registry {
  string name = 1;   // registry name, eg: nacos, etcd, consul
  string addrs = 2;   // registry address
  google.protobuf.Duration timeout = 3; // registry timeout
}

// Telemetry config
message Telemetry {
  bool   disable = 1;   // disable tracing
  string exporter = 2; // tracing exporter, eg: otlphttp, otlpgrpc, stdout, zipkin, file, noop
  string endpoint = 3;   // tracing endpoint
  double sampler = 4; // tracing sampler: 0-1, 1 means full sampling, 0 means no sampling
  map<string, string> headers = 5; // otlp headers
  string http_path = 6; // otlp http path
}

// nacos config
message Nacos {
  // nacos server address
  repeated string address = 1;
  // nacos config data id
  string data_id = 2;
  // nacos config group
  string group = 3;
  // nacos config namespace
  string namespace = 4;
  // nacos config username
  string username = 5;
  // nacos config password
  string password = 6;
  // the nacos server contextpath,default=/nacos,this is not required in 2.0
  string context_path = 7;
  // nacos config log dir
  string log_dir = 8;
  // nacos config cache dir
  string cache_dir = 9;
  // nacos timeout(ms). default 5000
  google.protobuf.Duration timeout = 10;
  // nacos logger level. default info
  string log_level = 11;
  // nacos format, default=yaml
  string format = 12;
  // not load cache at
  bool not_load_cache_at_start = 13;
}

// middleware config
message Middleware {
  string name = 1;
  google.protobuf.Any options = 2;
}

